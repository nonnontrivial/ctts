services:
  rabbitmq:
    image: "rabbitmq:4.1-rc-alpine"
    environment:
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  openmeteo-sync:
    image: "ghcr.io/open-meteo/open-meteo"
    command: sync ncep_gfs013 temperature_2m,cloud_cover --past-days 1 --repeat-interval 10
    volumes:
      - open-meteo-data:/app/data
    restart: unless-stopped

  openmeteo:
    image: "ghcr.io/open-meteo/open-meteo"
    ports:
      - "8080:8080"
    volumes:
      - open-meteo-data:/app/data

  api:
    build: ./api
    restart: on-failure
    ports:
      - "8000:80"
    volumes:
      - ./data:/data
    environment:
      OPEN_METEO_HOST: "openmeteo"
    depends_on:
      openmeteo:
        condition: service_started
    healthcheck:
      test:
        [
          "CMD",
          "python",
          "-c",
          "import urllib.request; urllib.request.urlopen('http://localhost:80')",
        ]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s

  snapshot:
    build: ./snapshot
    environment:
      RESOLUTION: 5
      API_HOST: "api"
      API_PORT: "80"
      RABBITMQ_HOST: "rabbitmq"
    restart: on-failure
    depends_on:
      api:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./snapshot/data.geojson:/app/data.geojson

volumes:
  open-meteo-data:
