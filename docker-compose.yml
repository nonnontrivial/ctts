version: "3"

services:
  postgres:
    image: "postgres:latest"
    environment:
      POSTGRES_DB: "postgres"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "password"
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - postgres

  keydb:
    image: "eqalpha/keydb:latest"
    ports:
      - "6379:6379"

  rabbitmq:
    image: "rabbitmq:3-management-alpine"
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:15672" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    environment:
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"

  openmeteo:
    image: "ghcr.io/open-meteo/open-meteo"
    ports:
      - "8080:8080"
    volumes:
      - open-meteo-data:/app/data

  api:
    build: ./api
    ports:
      - "8000:8000"
    environment:
      API_VERSION: "v1"
      LOG_LEVEL: 30
      OPEN_METEO_HOST: "openmeteo"
      OPEN_METEO_PORT: 8080
    restart: on-failure
    depends_on:
      - openmeteo

  producer:
    build: ./pp
    environment:
      API_VERSION: "v1"
      MODEL_VERSION: "0.1.0"
      API_HOST: "api"
      KEYDB_HOST: "keydb"
      RABBITMQ_HOST: "rabbitmq"
      TASK_SLEEP_INTERVAL: "0.5"
    restart: on-failure
    depends_on:
      - rabbitmq
      - api
      - keydb
    links:
      - rabbitmq

  consumer:
    build: ./pc
    ports:
      - "8090:8090"
    environment:
      AMQP_HOST: "rabbitmq"
      PG_DATABASE: "postgres"
    restart: on-failure
    depends_on:
      - postgres
      - rabbitmq
    links:
      - rabbitmq

volumes:
  grafana-data:
  postgres-data:
  open-meteo-data:
    external: true
    
